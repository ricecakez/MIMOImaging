function [f1,f2,S] = Unitary_ESPRIT_2D_1011(x,M,N,K)
N0 = N-1;
X = buffer(x,M*N0,M*N0-1,'nodelay');
[P,L] = size(X);
m = P/2;
X1 = X(1:m,:);
X2 = X(m+1:end,:);
T1 = real(X1+IEM(m)*X2);
T2 = -imag(X1+IEM(m)*X2);
T3 = imag(X1-IEM(m)*X2);
T4 = real(X1-IEM(m)*X2);
Z = [T1 T2
    T3 T4];
[U,D,V] = svd(Z);
Uz = U(:,1:K);
Es = UniMat(P)*Uz;
E1 = Es(1:end-M,:);
E2 = Es(M+1:end,:);
Psi = pinv(E1)*E2;
[T,D] = eig(Psi);
f2 = angle(diag(D))/2/pi;
Te = rowPermutateMat(M,N0);
Es2 = Te*Es;
B = Es2*T;
B1 = B(1:end-N0,:);
B2 = B(N0+1:end,:);
Phi = B1\B2;
f1 = angle(diag(Phi))/2/pi;
A = kr(exp(1i*2*pi*(0:M-1).'*f2.'),exp(1i*2*pi*(0:N-1).'*f1.'));
S = abs((A'*A)\A'*x);